openapi: 3.0.3
info:
  title: Todo list API
  description: Write YAML file with details of todo list API
  termsOfService: http://localhost/terms
  contact:
    name: Aleksandr
    url: http://localhost
    email: contact@email.com
  license:
    name: .net core
    url: http://localhost
  version: 1.0.0
servers:
  - url: http://localhost/api
    description: Development server
    variables:
      port:
        default: '8000'
paths:
  /todo:
    post:
      tags: 
        - Todo
      summary: Add new Item
      requestBody:
        description: 
          'Method to add new Item to the database TodoItems. Category and ItemColor are enum.'
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/todo"
            examples:
              item:
                value: {
                  id: 0,
                  title: string,
                  description: string,
                  category: enum,
                  dateCreated: date auto create,
                  dueDate: set date,
                  itemColor: enum,
                  isImportant: boolean,
                  isComplete: boolean
                }
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todo'
        '403':
          description: Request forbidden
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
  /todo/{id}:
    get:
      tags:
        - Todo
      summary: Find item by ID
      description: Return item by ID from database TodoItem
      parameters:
        - name: id
          in: path
          description: Set ID to get item
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/todo'
        '400':
          description: Invalid ID
        '403':
          description: Access forbidden
        '500':
          description: Internal Server Error
    put:
      tags:
        - Todo
      summary: Get Item by ID
      description: Modify item's fields
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Item model to modify any field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/todo'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID
        '404':
          description: Todo item Not Found
        '405':
          description: Validation exception
        '403':
          description: Access forbidden
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Todo
      summary: Delete Item by ID
      description: Delete Item from Database by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID
        '404':
          description: Item Not Found
components:
  schemas:
    todo:
      properties:
        id:
          type: integer
          format: int64
          example: 2
        title:
          type: string
          format: string
          example: Wash your car
        description:
          type: string
          format: string
          example: Wash your car after work today
        category:
          $ref: '#/components/schemas/category'
        dateCreated:
          type: string
          format: date
          example: 'Tue, 19 Sep 2023 18:12:27 GMT'
        dueDate:
          type: string
          format: date
          example: 'Tue, 19 Sep 2023 18:12:27 GMT'
        itemColor:
          $ref: '#/components/schemas/itemColor'
        isImportant:
          type: boolean
          format: boolean
          example: false
        isComplited:
          type: boolean
          format: boolean
          example: false
    category:
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          format: string
          example: Vehicle
    itemColor:
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          format: string
          example: White




        
      